name: Node.js Package

on:
  release:
    types: [created]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'

      - name: Install
        run: |
          corepack enable
          corepack prepare pnpm@latest --activate
          pnpm install

      - name: Tests & Coverage
        run: |
          pnpm run test
          pnpm run coverage

      - name: Lint
        run: pnpm run lint

      - name: Production Build
        run: pnpm run build:prod

  publish:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'
          registry-url: https://registry.npmjs.org/

      - name: Read package.json version
        id: package-version
        uses: jaywcjlove/github-action-package@main

      - name: Install
        run: |
          corepack enable
          corepack prepare pnpm@latest --activate
          pnpm install

      - name: Publish Release
        if: ${{ contains(steps.package-version.outputs.version, '-') == false }}
        run: pnpm publish --no-git-checks
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Publish Pre-Release
        if: ${{ contains(steps.package-version.outputs.version, '-') == true }}
        run: pnpm publish --no-git-checks --tag next
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      # - name: Publish Beta Release
      #   if: ${{ contains(steps.package-version.outputs.version, 'beta') == true }}
      #   run: pnpm publish --no-git-checks --tag beta
      #   env:
      #     NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
